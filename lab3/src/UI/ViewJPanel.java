/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Model.Application;
import Model.Observation;
import Model.VitalSignHistory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nayankarumuri
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    
    private Application application;
    DefaultTableModel viewtableModel;
    Observation selectedObservation;
    
    ViewJPanel(Application application) {
        initComponents();
        
        this.application=application;
        this.viewtableModel= (DefaultTableModel) observationTable.getModel();
        displayObservation();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        fieldId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        fieldTemp = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        fieldBP = new javax.swing.JTextField();
        UpdateObserBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        observationTable = new javax.swing.JTable();
        ViewObsBtn = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("VIEW");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, -1, -1));

        fieldId.setEnabled(false);
        add(fieldId, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 80, -1));

        jLabel2.setText("ID");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 20, -1));
        add(fieldTemp, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 140, 80, -1));

        jLabel3.setText("Temp");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        jLabel4.setText("BP");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 30, -1));
        add(fieldBP, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 210, 70, -1));

        UpdateObserBtn.setText("Update Obser");
        UpdateObserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateObserBtnActionPerformed(evt);
            }
        });
        add(UpdateObserBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, -1, -1));

        observationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "temp", "Table"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(observationTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, -1, 260));

        ViewObsBtn.setText("View details");
        ViewObsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewObsBtnActionPerformed(evt);
            }
        });
        add(ViewObsBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 350, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void ViewObsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewObsBtnActionPerformed
        // TODO add your handling code here:
        
        int selectedRow=observationTable.getSelectedRow();
        
        if(selectedRow >=0) {
            Observation observation = (Observation) observationTable.getValueAt(selectedRow, 0);
            
            fieldId.setText(String.valueOf(observation.getObservationId()));
            fieldTemp.setText(String.valueOf(observation.getTemperature()));
            fieldBP.setText(String.valueOf(observation.getBloodPressure()));
            
            
        } else{
            JOptionPane.showMessageDialog(null, "pls select row");
        }
    }//GEN-LAST:event_ViewObsBtnActionPerformed

    private void UpdateObserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateObserBtnActionPerformed
        // TODO add your handling code here:
        
        if(!fieldId.getText().isEmpty()){
            Observation o=this.application.getHistory().findObservation(Integer.valueOf(fieldId.getText()));
            o.setBloodPressure(Double.valueOf(fieldBP.getText()));
            o.setTemperature(Double.valueOf(fieldTemp.getText()));
            
            
        
        //dng below is fine
        //this.selectedObservation.setBloodPressure(Double.valueOf(fieldBP.getText()));
        //this.selectedObservation.setTemperature(Double.valueOf(fieldTemp.getText()));
        }
        else {
            JOptionPane.showMessageDialog(null,"u didnot made any selection");
        }
    }//GEN-LAST:event_UpdateObserBtnActionPerformed

    public void displayObservation(){
        VitalSignHistory history=this.application.getHistory();
        
        if(history.getVitalSignHistory().size() > 0){
            
            viewtableModel.setRowCount(0);
            
            for(Observation o : history.getVitalSignHistory()){
               
                //no.of columns in table=3
                
                Object row[]=new Object[3];
                row[0]=o;
                row[1]=o.getBloodPressure();
                row[2]=o.getTemperature();
                
                viewtableModel.addRow(row);
               
                
            }
        } else {
            System.out.println("Empty list");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton UpdateObserBtn;
    private javax.swing.JButton ViewObsBtn;
    private javax.swing.JTextField fieldBP;
    private javax.swing.JTextField fieldId;
    private javax.swing.JTextField fieldTemp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable observationTable;
    // End of variables declaration//GEN-END:variables

    private class application {

        public application() {
        }
    }
}
